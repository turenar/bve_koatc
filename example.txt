peedLimit.SetSignal(0, 110);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 信号パターンの作成
// 場内～出発～閉塞～場内～出発の配置例

// 場内(ここより前にシナリオ開始位置を設定するとATC現示が出ない)

7020;

	// Section.BeginNew構文は在線中の後方閉塞位置を含めるため 0,1,2,3,…,9(最大)で記述する
	// Beacon.Put#170 構文の sectionパラメーターは、上記同様0からはじめ、Section.BeginNewの引数と同じものを使用する
	// 前車両が近くにいないのに、減速パターンが生成される場合は、7530を参考に送信する距離情報を増やしてください

	Section.BeginNew(0, 1, 2, 3, 4);
	Beacon.Put(170, 0, 0);	Beacon.Put(170, 1, 0);	Beacon.Put(170, 2, 0);	Beacon.Put(170, 3, 0);	Beacon.Put(170, 4, 0);

// この間にシナリオ開始位置となる Station[駅インデックス名].Put…を記述

// 出発
7148;
	Section.BeginNew(0, 1, 2, 3, 4);
	Beacon.Put(170, 0, 0);	Beacon.Put(170, 1, 0);	Beacon.Put(170, 2, 0);	Beacon.Put(170, 3, 0);	Beacon.Put(170, 4, 0);

// 閉塞
7255;
	Section.BeginNew(0, 1, 2, 3, 4);
	Beacon.Put(170, 0, 0);	Beacon.Put(170, 1, 0);	Beacon.Put(170, 2, 0);	Beacon.Put(170, 3, 0);	Beacon.Put(170, 4, 0);

// 閉塞 (最大まで距離情報を送信する場合の例。実用的にここまで遠くの位置を送信する必要はない)
7530;
	Section.BeginNew(0, 1, 2, 3, 4, 5, 6, 7, 8, 9);
	Beacon.Put(170, 0, 0);	Beacon.Put(170, 1, 0);	Beacon.Put(170, 2, 0);	Beacon.Put(170, 3, 0);	Beacon.Put(170, 4, 0);
	Beacon.Put(170, 5, 0);	Beacon.Put(170, 6, 0);	Beacon.Put(170, 7, 0);	Beacon.Put(170, 8, 0);	Beacon.Put(170, 9, 0);

// 閉塞
7910;
	Section.BeginNew(0, 1, 2, 3, 4);
	Beacon.Put(170, 0, 0);	Beacon.Put(170, 1, 0);	Beacon.Put(170, 2, 0);	Beacon.Put(170, 3, 0);	Beacon.Put(170, 4, 0);

// 閉塞
8078;
	Section.BeginNew(0, 1, 2, 3, 4);
	Beacon.Put(170, 0, 0);	Beacon.Put(170, 1, 0);	Beacon.Put(170, 2, 0);	Beacon.Put(170, 3, 0);	Beacon.Put(170, 4, 0);


// 2段パターンの前半(25km/hまで減速)を設定
// Beacon#172を使用
// 2番目の引数は出発信号となるSectionの位置。この場合「8534」のある3つ先を参照する
// これにより出発信号が停止の場合のみ2段パターンの第一パターンが発生する(出発開通により自動消去される)
// 3番目の引数には「25km/h制限となる地点までの相対距離(m)」と「025」を並べて入力する

8135;
	Beacon.Put(172, 3, 320025);


// 第1場内(閉塞の場合と何ら変わりない)

8230;
	Section.BeginNew(0, 1, 2, 3, 4);
	Beacon.Put(170, 0, 0);	Beacon.Put(170, 1, 0);	Beacon.Put(170, 2, 0);	Beacon.Put(170, 3, 0);	Beacon.Put(170, 4, 0);

// 第2場内(下の注意事項を参照)

8435;

	Section.BeginNew(0, 1, 2, 3, 4);
	Beacon.Put(170, 0, 0);	Beacon.Put(170, 1, 1);	Beacon.Put(170, 2, 0);	Beacon.Put(170, 3, 0);	Beacon.Put(170, 4, 0);
	//　　　　　　　　　　　　　　　　　　　　▲注意
	// 2段パターンの後半部分となる第2場内において
	// 次の出発信号位置を送信するBeaconは3つ目の引数 optional に「1」を入れる
	// これを忘れると、前方停止信号で時速5km/hまで減速すると常用ブレーキが作動してしまう
	//
	// (変更) ただし、Beacon#172または#183を使用しているときは optional に「1」を入れる必要はない。



// この間に駅停止位置が来る



// 2段パターンを使用する出発信号に対しては、駅停止位置のあとに絶対停止用点照査を置く
// Beacon#0を使用
// 2番目の引数は直後の出発信号なので「1」
// 3番目の引数は十分に大きな値を使用
// 1m間隔で2つ同じ構文を配置すると、2つ目の構文位置で照査動作する

8516;
	Beacon.Put(0, 1, 1000000);
8517;
	Beacon.Put(0, 1, 1000000);


// 出発
8534;
	Section.BeginNew(0, 1, 2, 3, 4);
	Beacon.Put(170, 0, 0);	Beacon.Put(170, 1, 0);	Beacon.Put(170, 2, 0);	Beacon.Put(170, 3, 0);	Beacon.Put(170, 4, 0);

// 終点駅から先は、ダミーの閉塞を設置する
// ダミー閉塞はSectionとBeacon#170の値を1つずつ減らしていく
// (必要ない気がする)
8955;
	Section.BeginNew(0, 1, 2, 3);
	Beacon.Put(170, 0, 0);	Beacon.Put(170, 1, 0);	Beacon.Put(170, 2, 0);	Beacon.Put(170, 3, 0);
9320;
	Section.BeginNew(0, 1, 2);
	Beacon.Put(170, 0, 0);	Beacon.Put(170, 1, 0);	Beacon.Put(170, 2, 0);
9665;
	Section.BeginNew(0, 1);
	Beacon.Put(170, 0, 0);	Beacon.Put(170, 1, 0);
9665;
	Section.BeginNew(0);
	Beacon.Put(170, 0, 0);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 列選設定(含、駅停車パターン)、モニタ設定
//
// 始発駅
7126;
	// 列番5501・現在地07(桜上水) モニタ用列番と列選種別「5」を設定
	// モニタ画面の走行方向矢印と運転台位置マークは列番の奇数/偶数で反転する
	// なお動物園線は編成方向と上下線が逆になるので列番を実際と異なる番号にするなど各自工夫
	Beacon.Put(180, 0, 550107);

	// モニタ「始発駅」00(新宿)
	Beacon.Put(191, 0, 0);

	// モニタ「行先」13(つつじヶ丘)
	Beacon.Put(192, 0, 13);

	// モニタ「次駅」3(笹塚)
	Beacon.Put(193, 0, 8);

	// モニタ「次々駅」4(代田橋)
	Beacon.Put(194, 0, 9);

	// このあとに駅停止位置を設定

// 停留場接近
7276;
	// 停車 or 通過判定
	// 992 = 各停のみ・08 = 上北沢
	Beacon.Put(181, 0, 99208);

	// 停車ならパターン発生：650m先で0km/h
	Beacon.Put(182, 0, 650000);

// 停止位置許容範囲の始点(-1.5mなど)で駅停車判定
// 停車駅なら最大5km/hパターンに移行
// 速度ゼロかつブレーキ常用最大位置で駅停車パターン消去)
// 列番5501・現在地08(上北沢)
// 正しい (Beacon#992と同一の) 駅番号を使用しないとパターン消去されません
7870.5; // ←駅停止位置の1.5m前 (7872も参照)
	Beacon.Put(180, 0, 550108);

	// 次駅9(八幡山)・次々駅10(芦花公園)設定
	// なお各駅停車の場合これらを省略してもドア開で自動コマ送り
	Beacon.Put(193, 0, 9);
	Beacon.Put(194, 0, 10);
7872;
	// Station[駅キー].Put(1, -1.5, 1.5)
	//                        ▲Beacon#180との距離はふたつ目の引数と同じにする

// 停車場接近 8516 hachimanyama
7928;
	// 停車 or 通過判定
	// 996 = 快速および各停・09 = 八幡山
	// 出発停止の駅では駅停車パターンを使用しないがATC表示器に駅名を表示
	Beacon.Put(181, 0, 99609);

// 停止位置許容範囲の始点(-1.5mなど)で駅停車判定
// 速度ゼロかつブレーキ常用最大位置で駅停車パターン消去)
// 列番5501・現在地09(八幡山)
8511;
	Beacon.Put(180, 0, 550109);
	// 次駅10(芦花公園)・次々駅11(千歳烏山)設定
	Beacon.Put(193, 0, 10);
	Beacon.Put(194, 0, 11);


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 速度制限 #176～179のいずれも同機能
// 最も制限速度が低いものが適用される
//
7125;
	// 95km/h一定速度制限
	Beacon.Put(176, 0, 95);	
7630;
	// 600m先 50km/h制限
	Beacon.Put(177, 0, 600050);
	// 600m先 85km/h制限
8275;
	Beacon.Put(179, 0, 600085);
8400;
	// 200m先 45km/h制限
	Beacon.Put(178, 0, 200045);
8475;
	// 先の#177の制限を解除
	Beacon.Put(177, 0, 999);
8875;
	// 先の#178の制限を解除
	Beacon.Put(178, 0, 999);
9275;
	// 先の#179の制限を解除
	Beacon.Put(179, 0, 999);
10250;
	//一定速度制限を105に変更
	Beacon.Put(176, 0, 105);

